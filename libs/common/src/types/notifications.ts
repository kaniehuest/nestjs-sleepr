// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.0
//   protoc               v3.21.12
// source: proto/notifications.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export interface Empty {
}

export interface NotifyEmailMessage {
  email: string;
  text: string;
}

export const NOTIFICATIONS_PACKAGE_NAME = "notifications";

export interface NotificationsClient {
  notifiEmail(request: NotifyEmailMessage): Observable<Empty>;
}

export interface NotificationsController {
  notifiEmail(request: NotifyEmailMessage): Promise<Empty> | Observable<Empty> | Empty;
}

export function NotificationsControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["notifiEmail"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("Notifications", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("Notifications", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const NOTIFICATIONS_SERVICE_NAME = "Notifications";
